Index: debian_fdm/connect.c
===================================================================
--- debian_fdm.orig/connect.c	2013-05-09 12:57:30.000000000 +0200
+++ debian_fdm/connect.c	2013-05-09 13:16:19.000000000 +0200
@@ -40,6 +40,7 @@
 int	getport(char *);
 int	httpproxy(struct server *, struct proxy *, struct io *, int, char **);
 int	socks5proxy(struct server *, struct proxy *, struct io *, int, char **);
+
 SSL    *makessl(struct server *, int, int, int, char **);
 
 char *
@@ -534,7 +535,10 @@
 	int	 n, mode;
 
 	ctx = SSL_CTX_new(SSLv23_client_method());
-        SSL_CTX_set_options(ctx, SSL_OP_ALL);
+	if (srv->tls1)
+		SSL_CTX_set_options(ctx, SSL_OP_ALL);
+	else
+		SSL_CTX_set_options(ctx, SSL_OP_ALL | SSL_OP_NO_TLSv1);
         SSL_CTX_set_default_verify_paths(ctx);
 	SSL_CTX_set_verify(ctx, SSL_VERIFY_NONE, NULL);
 
Index: debian_fdm/fdm.conf.5
===================================================================
--- debian_fdm.orig/fdm.conf.5	2013-05-09 12:57:30.000000000 +0200
+++ debian_fdm/fdm.conf.5	2013-05-09 13:16:19.000000000 +0200
@@ -360,6 +360,7 @@
 .Op Ic no-apop
 .Op Ic no-uidl
 .Op Ic no-verify
+.Op Ic no-tls1
 .Xc
 These statements define a POP3 or POP3S account.
 The
@@ -420,6 +421,15 @@
 .Xr fdm 1
 not use the UIDL command to retrieve mails.
 This is mainly useful for broken POP3 servers.
+.Pp
+The
+.Ic no-tls1
+keyword instructs
+.Xr fdm 1
+not to use the TLSv1 protocol with SSL connections. Some broken servers will
+fail in the handshake phase if the
+.Ic tls1
+flag is not unset.
 .It Xo Ic pop3 Ic pipe Ar command
 .Op Ar userpass
 .Op Ar only
@@ -458,6 +468,7 @@
 .Op Ar folders
 .Op Ar only
 .Op Ic no-verify
+.Op Ic no-tls1
 .Op Ic no-cram-md5
 .Op Ic no-login
 .Xc
@@ -559,6 +570,7 @@
 .Op Ar userpass
 .Ic group Ar group
 .Ic cache Ar cache
+.Op Ic no-tls1
 .Xc
 .It Xo Ic nntps Ic server Ar host
 .Op Ic port Ar port
@@ -568,6 +580,7 @@
 .Ar group ...
 .Li }
 .Ic cache Ar cache
+.Op Ic no-tls1
 .Xc
 An NNTP account.
 Articles are fetched from the specified group or groups and delivered.
Index: debian_fdm/fdm.h
===================================================================
--- debian_fdm.orig/fdm.h	2013-05-09 12:58:03.000000000 +0200
+++ debian_fdm/fdm.h	2013-05-09 13:16:19.000000000 +0200
@@ -217,6 +217,7 @@
 	char		*port;
 	struct addrinfo	*ai;
 	int		 ssl;
+	int		 tls1;
 	int		 verify;
 };
 
Index: debian_fdm/lex.c
===================================================================
--- debian_fdm.orig/lex.c	2013-05-09 12:57:30.000000000 +0200
+++ debian_fdm/lex.c	2013-05-09 13:16:19.000000000 +0200
@@ -150,6 +150,7 @@
 	{ "no-create", TOKNOCREATE },
 	{ "no-login", TOKNOLOGIN },
 	{ "no-received", TOKNORECEIVED },
+	{ "no-tls1", TOKNOTLS1 },
 	{ "no-uidl", TOKNOUIDL },
 	{ "no-verify", TOKNOVERIFY },
 	{ "none", TOKNONE },
Index: debian_fdm/parse.y
===================================================================
--- debian_fdm.orig/parse.y	2013-05-09 12:57:30.000000000 +0200
+++ debian_fdm/parse.y	2013-05-09 13:16:19.000000000 +0200
@@ -201,6 +201,7 @@
 %token TOKNONE
 %token TOKNORECEIVED
 %token TOKNOT
+%token TOKNOTLS1
 %token TOKNOUIDL
 %token TOKNOVERIFY
 %token TOKOLDONLY
@@ -301,7 +302,7 @@
 %type  <expritem> expritem
 %type  <exprop> exprop
 %type  <fetch> fetchtype
-%type  <flag> cont not disabled keep execpipe writeappend compress verify
+%type  <flag> cont not disabled keep execpipe writeappend compress verify tls1
 %type  <flag> apop poptype imaptype nntptype nocrammd5 nologin uidl
 %type  <localgid> localgid
 %type  <locks> lock locklist
@@ -1324,10 +1325,11 @@
 		 data->path.str = $2;
 		 data->compress = $3;
 	 }
-       | imaptype server userpassnetrc folder1 verify nocrammd5 nologin
+       | imaptype server userpassnetrc folder1 verify nocrammd5 nologin tls1
 /**      [$1: imaptype (int)] [$2: server (struct { ... } server)] */
 /**      [$3: userpassnetrc (struct { ... } userpass)] [$4: folder1 (char *)] */
 /**      [$5: verify (int)] [$6: nocrammd5 (int)] [$7: nologin (int)] */
+/**      [$8: tls1 (int)] */
 	 {
 		 struct deliver_imap_data	*data;
 
@@ -1353,6 +1355,7 @@
 		 data->folder.str = $4;
 		 data->server.ssl = $1;
 		 data->server.verify = $5;
+		 data->server.tls1 = $8;
 		 data->server.host = $2.host;
 		 if ($2.port != NULL)
 			 data->server.port = $2.port;
@@ -2216,6 +2219,16 @@
 		 $$ = 0;
 	 }
 
+/** TLS1: <flag> (int) */
+tls1: TOKNOTLS1
+	{
+		$$ = 0;
+	}
+      | /* empty */
+	{
+		$$ = 1;
+	}
+
 /** UIDL: <flag> (int) */
 uidl: TOKNOUIDL
 	{
@@ -2387,11 +2400,11 @@
 	  }
 
 /** FETCHTYPE: <fetch> (struct { ... } fetch) */
-fetchtype: poptype server userpassnetrc poponly apop verify uidl
+fetchtype: poptype server userpassnetrc poponly apop verify uidl tls1
 /**        [$1: poptype (int)] [$2: server (struct { ... } server)] */
 /**        [$3: userpassnetrc (struct { ... } userpass)] */
 /**        [$4: poponly (struct { ... } poponly)] [$5: apop (int)] [$6: verify (int)] */
-/**        [$7: uidl (int)] */
+/**        [$7: uidl (int)] [$8: tls1 (int)] */
            {
 		   struct fetch_pop3_data	*data;
 
@@ -2414,6 +2427,7 @@
 
 		   data->server.ssl = $1;
 		   data->server.verify = $6;
+		   data->server.tls1 = $8;
 		   data->server.host = $2.host;
 		   if ($2.port != NULL)
 			   data->server.port = $2.port;
@@ -2452,7 +2466,8 @@
 /**        [$3: userpassnetrc (struct { ... } userpass)] */
 /**        [$4: folderlist (struct strings *)] [$5: imaponly (enum fetch_only)] */
 /**        [$6: verify (int)] [$7: nocrammd5 (int)] */
-	   nologin
+	   nologin tls1
+/**        [$8: nologin (int)] [$9: tls1 (int)] */
            {
 		   struct fetch_imap_data	*data;
 
@@ -2476,6 +2491,7 @@
 		   data->folders = $4;
 		   data->server.ssl = $1;
 		   data->server.verify = $6;
+		   data->server.tls1 = $9;
 		   data->server.host = $2.host;
 		   if ($2.port != NULL)
 			   data->server.port = $2.port;
@@ -2530,11 +2546,11 @@
 		   $$.data = data;
 		   data->mboxes = $1;
 	   }
-	 | nntptype server userpassnetrc groups TOKCACHE replpathv verify
+	 | nntptype server userpassnetrc groups TOKCACHE replpathv verify tls1
 /**        [$1: nntptype (int)] [$2: server (struct { ... } server)] */
 /**        [$3: userpassnetrc (struct { ... } userpass)] */
 /**        [$4: groups (struct strings *)] [$6: replpathv (char *)] */
-/**        [$7: verify (int)] */
+/**        [$7: verify (int)] [$8: tls1 (int)] */
            {
 		   struct fetch_nntp_data	*data;
 		   char				*cause;
@@ -2573,6 +2589,7 @@
 
 		   data->server.ssl = $1;
 		   data->server.verify = $7;
+		   data->server.tls1 = $8;
 		   data->server.host = $2.host;
 		   if ($2.port != NULL)
 			   data->server.port = $2.port;
